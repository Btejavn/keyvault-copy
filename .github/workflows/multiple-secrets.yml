name: creating secrets but not displaying

on:
  workflow_dispatch:
    inputs:
      keyvault-name:
        description: 'Azure Key Vault Name'
        required: true
      secrets:
        description: 'List of secrets (JSON format)'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}

      - name: Create or Update Secrets in Azure Key Vault
        id: create-secrets
        run: |
          # Parse JSON input to get list of secrets
          secrets=$(echo "${{ github.event.inputs.secrets }}" | jq -c '.[]')

          # Loop through each secret and set/update in Azure Key Vault
          while IFS= read -r secret; do
            secret_name=$(echo "$secret" | jq -r '.name')
            secret_values=$(echo "$secret" | jq -c -r '.values[]')

            # Loop through each value and set/update in Azure Key Vault
            while IFS= read -r value; do
              az keyvault secret set --vault-name ${{ github.event.inputs.keyvault-name }} --name "$secret_name" --value "$value"
            done <<< "$secret_values"
          done <<< "$secrets"

          echo "Secrets created or updated successfully"

      - name: Get Secrets from Azure Key Vault
        id: get-secrets
        run: |
          # Parse JSON input to get list of secrets
          secrets=$(echo "${{ github.event.inputs.secrets }}" | jq -c '.[]')

          # Loop through each secret and set it in GitHub environment
          while IFS= read -r secret; do
            secret_name=$(echo "$secret" | jq -r '.name')

            # Loop through each value and set it in GitHub environment
            secret_values=$(az keyvault secret show --vault-name ${{ github.event.inputs.keyvault-name }} --name "$secret_name" --query 'value' --output json)
            while IFS= read -r value; do
              echo "${secret_name}_${value}_VALUE=$value" >> $GITHUB_ENV
            done <<< "$secret_values"
          done <<< "$secrets"

      - name: Use Secrets
        run: |
          # Access the secrets in subsequent steps
          echo "The secret value is $SECRET1_value1_VALUE"
          echo "Another secret value is $SECRET2_value1_VALUE"
          # Add more lines for additional secrets and values
