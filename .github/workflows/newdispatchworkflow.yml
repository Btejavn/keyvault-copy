name: creating secrets but not displaying

on:
  workflow_dispatch:
    inputs:
      keyvault-name:
        description: 'Azure Key Vault Name'
        required: true
      secrets:
        description: 'List of secrets (JSON format)'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create or Update Secrets in Azure Key Vault
        id: create-secrets
        run: |
          # Parse JSON input to get list of secrets
          secrets=$(echo "${{ github.event.inputs.secrets }}" | jq -c '.[]')

          # Loop through each secret and set/update in Azure Key Vault
          while IFS= read -r secret; do
            secret_name=$(echo "$secret" | jq -r '.name')
            secret_value=$(echo "$secret" | jq -r '.value')

            # Set or update the secret in Azure Key Vault
            az keyvault secret set --vault-name source-keyvault-5 --name "$secret_name" --value "$secret_value"
          done <<< "$secrets"

          echo "Secrets created or updated successfully"

      - name: Get Secrets from Azure Key Vault
        id: get-secrets
        run: |
          # Parse JSON input to get list of secrets
          secrets=$(echo "${{ github.event.inputs.secrets }}" | jq -c '.[]')

          # Loop through each secret and set it in GitHub environment
          while IFS= read -r secret; do
            secret_name=$(echo "$secret" | jq -r '.name')
            echo "${secret_name}_VALUE=$(az keyvault secret show --vault-name source-keyvault-5 --name "$secret_name" --query 'value' --output tsv)" >> $GITHUB_ENV
          done <<< "$secrets"

      - name: Use Secrets
        run: |
          # Access the secrets in subsequent steps
          while IFS= read -r secret; do
            secret_name=$(echo "$secret" | cut -d'=' -f1)
            secret_value=$(echo "$secret" | cut -d'=' -f2)
            echo "The secret value for $secret_name is $secret_value"
          done < <(env | grep "_VALUE")

